/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as User_space_for_air_detailRouteImport } from './routes/user_space_for_air_detail'

const User_space_for_air_detailRoute =
  User_space_for_air_detailRouteImport.update({
    id: '/user_space_for_air_detail',
    path: '/user_space_for_air_detail',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/user_space_for_air_detail': typeof User_space_for_air_detailRoute
}
export interface FileRoutesByTo {
  '/user_space_for_air_detail': typeof User_space_for_air_detailRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/user_space_for_air_detail': typeof User_space_for_air_detailRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/user_space_for_air_detail'
  fileRoutesByTo: FileRoutesByTo
  to: '/user_space_for_air_detail'
  id: '__root__' | '/user_space_for_air_detail'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  User_space_for_air_detailRoute: typeof User_space_for_air_detailRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/user_space_for_air_detail': {
      id: '/user_space_for_air_detail'
      path: '/user_space_for_air_detail'
      fullPath: '/user_space_for_air_detail'
      preLoaderRoute: typeof User_space_for_air_detailRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  User_space_for_air_detailRoute: User_space_for_air_detailRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
